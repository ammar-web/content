[MODEL: dataset="symantec_swg_beta_raw"]
alter // pre-processing 
    cloud_location = concat (trim(x_bluecoat_location_name, "\""), " (", x_bluecoat_location_id, ")"),
    c_ip_ipv4 = if(c_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", c_ip),
    c_ip_ipv6 = if(c_ip ~= "[\da-fA-F]+\:[\da-fA-F]+", c_ip),
    s_ip_ipv4 = if(s_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", s_ip),
    s_ip_ipv6 = if(s_ip ~= "[\da-fA-F]+\:[\da-fA-F]+", s_ip),
    s_supplier_ip_ipv4 = if(s_supplier_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", s_supplier_ip),
    s_supplier_ip_ipv6 = if(s_supplier_ip ~= "[\da-fA-F]+\:[\da-fA-F]+", s_supplier_ip),
    r_ip_ipv4 = if(r_ip ~= "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}", r_ip),
    r_ip_ipv6 = if(r_ip ~= "[\da-fA-F]+\:[\da-fA-F]+", r_ip),
    url_categories = rtrim(arraystring(arraydistinct(split(concat(cs_categories, ";", trim(x_rs_certificate_hostname_categories, "-")), ";")), ";"), ";"),
    negotiated_cipher = if(x_cs_connection_negotiated_cipher = x_rs_connection_negotiated_cipher, x_cs_connection_negotiated_cipher, concat(x_cs_connection_negotiated_cipher, ";", x_rs_connection_negotiated_cipher)),
    negotiated_tls_version = if(x_cs_connection_negotiated_ssl_version = x_rs_connection_negotiated_ssl_version, x_cs_connection_negotiated_ssl_version, concat(x_cs_connection_negotiated_ssl_version, ";", x_rs_connection_negotiated_ssl_version)),
    os = lowercase(x_client_os), 
    url = concat(replace(cs_uri_scheme, "ssl", "https"), "://", cs_host, ":", cs_uri_port, cs_uri_path, trim(cs_uri_query, "-"))
| alter // mapping based on the following format: https://techdocs.broadcom.com/us/en/symantec-security-software/web-and-network-security/cloud-swg/help/wss-reference/accesslogformats-ref.html
    xdm.alert.original_alert_id = x_exception_id,
    xdm.alert.severity = cs_threat_risk, 
    xdm.alert.original_threat_id = x_virus_id, 
    xdm.event.duration = to_integer(time_taken),
    xdm.event.id = x_bluecoat_transaction_uuid, 
    xdm.event.operation_sub_type = s_action,
    xdm.event.outcome = coalesce(sc_filter_result),
    xdm.intermediate.agent.type = x_bluecoat_access_type, 
    xdm.intermediate.cloud.zone = cloud_location, 
    xdm.intermediate.location.country = s_supplier_country, 
    xdm.intermediate.host.hostname = x_bluecoat_appliance_name, 
    xdm.intermediate.host.device_id = x_bluecoat_request_tenant_id, 
    xdm.intermediate.is_proxy = to_boolean("TRUE"), 
    xdm.intermediate.ipv4 = s_ip_ipv4,
    xdm.intermediate.ipv6 = s_ip_ipv6,
    xdm.network.application_protocol = cs_uri_scheme,
    xdm.network.http.url = if(cs_uri_scheme ~= "http|ssl", url),
    xdm.network.http.method = if(cs_method = "ACL", XDM_CONST.HTTP_METHOD_ACL, cs_method = "BASELINE_CONTROL", XDM_CONST.HTTP_METHOD_BASELINE_CONTROL, cs_method = "BIND", XDM_CONST.HTTP_METHOD_BIND, cs_method = "CHECKIN", XDM_CONST.HTTP_METHOD_CHECKIN, cs_method = "CHECKOUT", XDM_CONST.HTTP_METHOD_CHECKOUT, cs_method = "CONNECT", XDM_CONST.HTTP_METHOD_CONNECT, cs_method = "COPY", XDM_CONST.HTTP_METHOD_COPY, cs_method = "DELETE", XDM_CONST.HTTP_METHOD_DELETE, cs_method = "GET", XDM_CONST.HTTP_METHOD_GET, cs_method = "HEAD", XDM_CONST.HTTP_METHOD_HEAD, cs_method = "LABEL", XDM_CONST.HTTP_METHOD_LABEL, cs_method = "LINK", XDM_CONST.HTTP_METHOD_LINK, cs_method = "LOCK", XDM_CONST.HTTP_METHOD_LOCK, cs_method = "MERGE", XDM_CONST.HTTP_METHOD_MERGE, cs_method = "MKACTIVITY", XDM_CONST.HTTP_METHOD_MKACTIVITY, cs_method = "MKCALENDAR", XDM_CONST.HTTP_METHOD_MKCALENDAR, cs_method = "MKCOL", XDM_CONST.HTTP_METHOD_MKCOL, cs_method = "MKREDIRECTREF", XDM_CONST.HTTP_METHOD_MKREDIRECTREF, cs_method = "MKWORKSPACE", XDM_CONST.HTTP_METHOD_MKWORKSPACE, cs_method = "MOVE", XDM_CONST.HTTP_METHOD_MOVE, cs_method = "OPTIONS", XDM_CONST.HTTP_METHOD_OPTIONS, cs_method = "ORDERPATCH", XDM_CONST.HTTP_METHOD_ORDERPATCH, cs_method = "PATCH", XDM_CONST.HTTP_METHOD_PATCH, cs_method = "POST", XDM_CONST.HTTP_METHOD_POST, cs_method = "PRI", XDM_CONST.HTTP_METHOD_PRI, cs_method = "PROPFIND", XDM_CONST.HTTP_METHOD_PROPFIND, cs_method = "PROPPATCH", XDM_CONST.HTTP_METHOD_PROPPATCH, cs_method = "PUT", XDM_CONST.HTTP_METHOD_PUT, cs_method = "REBIND", XDM_CONST.HTTP_METHOD_REBIND, cs_method = "REPORT", XDM_CONST.HTTP_METHOD_REPORT, cs_method = "SEARCH", XDM_CONST.HTTP_METHOD_SEARCH, cs_method = "TRACE", XDM_CONST.HTTP_METHOD_TRACE, cs_method = "UNBIND", XDM_CONST.HTTP_METHOD_UNBIND, cs_method = "UNCHECKOUT", XDM_CONST.HTTP_METHOD_UNCHECKOUT, cs_method = "UNLINK", XDM_CONST.HTTP_METHOD_UNLINK, cs_method = "UNLOCK", XDM_CONST.HTTP_METHOD_UNLOCK, cs_method = "UPDATE", XDM_CONST.HTTP_METHOD_UPDATE, cs_method = "UPDATEREDIRECTREF", XDM_CONST.HTTP_METHOD_UPDATEREDIRECTREF, cs_method = "VERSION_CONTROL", XDM_CONST.HTTP_METHOD_VERSION_CONTROL, to_string(cs_method)),
    xdm.network.http.referrer = cs_referer_, 
    xdm.network.http.response_code = if(sc_status != "0", if(sc_status = "100", XDM_CONST.HTTP_RSP_CODE_CONTINUE, sc_status = "101", XDM_CONST.HTTP_RSP_CODE_SWITCHING_PROTOCOLS, sc_status = "102", XDM_CONST.HTTP_RSP_CODE_PROCESSING, sc_status = "103", XDM_CONST.HTTP_RSP_CODE_EARLY_HINTS, sc_status = "200", XDM_CONST.HTTP_RSP_CODE_OK, sc_status = "201", XDM_CONST.HTTP_RSP_CODE_CREATED, sc_status = "202", XDM_CONST.HTTP_RSP_CODE_ACCEPTED, sc_status = "203", XDM_CONST.HTTP_RSP_CODE_NON__AUTHORITATIVE_INFORMATION, sc_status = "204", XDM_CONST.HTTP_RSP_CODE_NO_CONTENT, sc_status = "205", XDM_CONST.HTTP_RSP_CODE_RESET_CONTENT, sc_status = "206", XDM_CONST.HTTP_RSP_CODE_PARTIAL_CONTENT, sc_status = "207", XDM_CONST.HTTP_RSP_CODE_MULTI__STATUS, sc_status = "208", XDM_CONST.HTTP_RSP_CODE_ALREADY_REPORTED, sc_status = "226", XDM_CONST.HTTP_RSP_CODE_IM_USED, sc_status = "300", XDM_CONST.HTTP_RSP_CODE_MULTIPLE_CHOICES, sc_status = "301", XDM_CONST.HTTP_RSP_CODE_MOVED_PERMANENTLY, sc_status = "302", XDM_CONST.HTTP_RSP_CODE_FOUND, sc_status = "303", XDM_CONST.HTTP_RSP_CODE_SEE_OTHER, sc_status = "304", XDM_CONST.HTTP_RSP_CODE_NOT_MODIFIED, sc_status = "305", XDM_CONST.HTTP_RSP_CODE_USE_PROXY, sc_status = "307", XDM_CONST.HTTP_RSP_CODE_TEMPORARY_REDIRECT, sc_status = "308", XDM_CONST.HTTP_RSP_CODE_PERMANENT_REDIRECT, sc_status = "400", XDM_CONST.HTTP_RSP_CODE_BAD_REQUEST, sc_status = "401", XDM_CONST.HTTP_RSP_CODE_UNAUTHORIZED, sc_status = "402", XDM_CONST.HTTP_RSP_CODE_PAYMENT_REQUIRED, sc_status = "403", XDM_CONST.HTTP_RSP_CODE_FORBIDDEN, sc_status = "404", XDM_CONST.HTTP_RSP_CODE_NOT_FOUND, sc_status = "405", XDM_CONST.HTTP_RSP_CODE_METHOD_NOT_ALLOWED, sc_status = "406", XDM_CONST.HTTP_RSP_CODE_NOT_ACCEPTABLE, sc_status = "407", XDM_CONST.HTTP_RSP_CODE_PROXY_AUTHENTICATION_REQUIRED, sc_status = "408", XDM_CONST.HTTP_RSP_CODE_REQUEST_TIMEOUT, sc_status = "409", XDM_CONST.HTTP_RSP_CODE_CONFLICT, sc_status = "410", XDM_CONST.HTTP_RSP_CODE_GONE, sc_status = "411", XDM_CONST.HTTP_RSP_CODE_LENGTH_REQUIRED, sc_status = "412", XDM_CONST.HTTP_RSP_CODE_PRECONDITION_FAILED, sc_status = "413", XDM_CONST.HTTP_RSP_CODE_CONTENT_TOO_LARGE, sc_status = "414", XDM_CONST.HTTP_RSP_CODE_URI_TOO_LONG, sc_status = "415", XDM_CONST.HTTP_RSP_CODE_UNSUPPORTED_MEDIA_TYPE, sc_status = "416", XDM_CONST.HTTP_RSP_CODE_RANGE_NOT_SATISFIABLE, sc_status = "417", XDM_CONST.HTTP_RSP_CODE_EXPECTATION_FAILED, sc_status = "421", XDM_CONST.HTTP_RSP_CODE_MISDIRECTED_REQUEST, sc_status = "422", XDM_CONST.HTTP_RSP_CODE_UNPROCESSABLE_CONTENT, sc_status = "423", XDM_CONST.HTTP_RSP_CODE_LOCKED, sc_status = "424", XDM_CONST.HTTP_RSP_CODE_FAILED_DEPENDENCY, sc_status = "425", XDM_CONST.HTTP_RSP_CODE_TOO_EARLY, sc_status = "426", XDM_CONST.HTTP_RSP_CODE_UPGRADE_REQUIRED, sc_status = "428", XDM_CONST.HTTP_RSP_CODE_PRECONDITION_REQUIRED, sc_status = "429", XDM_CONST.HTTP_RSP_CODE_TOO_MANY_REQUESTS, sc_status = "431", XDM_CONST.HTTP_RSP_CODE_REQUEST_HEADER_FIELDS_TOO_LARGE, sc_status = "451", XDM_CONST.HTTP_RSP_CODE_UNAVAILABLE_FOR_LEGAL_REASONS, sc_status = "500", XDM_CONST.HTTP_RSP_CODE_INTERNAL_SERVER_ERROR, sc_status = "501", XDM_CONST.HTTP_RSP_CODE_NOT_IMPLEMENTED, sc_status = "502", XDM_CONST.HTTP_RSP_CODE_BAD_GATEWAY, sc_status = "503", XDM_CONST.HTTP_RSP_CODE_SERVICE_UNAVAILABLE, sc_status = "504", XDM_CONST.HTTP_RSP_CODE_GATEWAY_TIMEOUT, sc_status = "505", XDM_CONST.HTTP_RSP_CODE_HTTP_VERSION_NOT_SUPPORTED, sc_status = "506", XDM_CONST.HTTP_RSP_CODE_VARIANT_ALSO_NEGOTIATES, sc_status = "507", XDM_CONST.HTTP_RSP_CODE_INSUFFICIENT_STORAGE, sc_status = "508", XDM_CONST.HTTP_RSP_CODE_LOOP_DETECTED, sc_status = "511", XDM_CONST.HTTP_RSP_CODE_NETWORK_AUTHENTICATION_REQUIRED, sc_status = null, null, to_string(sc_status))),
    xdm.network.http.content_type = rs_content_type_, 
    xdm.network.http.http_header.value = cs_x_requested_with_, 
    xdm.network.http.http_header.header = if(cs_x_requested_with_ != null and cs_x_requested_with_ != "-", "X-Requested-With"),
    xdm.network.http.url_category = url_categories, 
    xdm.network.rule = x_bluecoat_reference_id, 
    xdm.network.tls.cipher = negotiated_cipher, 
    xdm.network.tls.protocol_version = negotiated_tls_version,
    xdm.network.tls.client_certificate.subject = x_cs_certificate_subject,
    xdm.network.tls.server_certificate.issuer = x_sc_connection_issuer_keyring, 
    xdm.network.tls.server_name = x_rs_certificate_hostname,
    xdm.network.tls.server_certificate.subject = x_rs_certificate_hostname,
    xdm.observer.action = s_action, 
    xdm.source.agent.type = x_client_agent_type, 
    xdm.source.agent.version = x_client_agent_sw, 
    xdm.source.host.device_category = x_client_device_type, 
    xdm.source.host.device_id = x_client_device_id, 
    xdm.source.ipv4 = c_ip_ipv4,
    xdm.source.ipv6 = c_ip_ipv6, 
    xdm.source.host.hostname = x_client_device_name, 
    xdm.source.host.os = x_client_os, 
    xdm.source.host.os_family = if(os contains "windows", XDM_CONST.OS_FAMILY_WINDOWS, os contains "mac", XDM_CONST.OS_FAMILY_MACOS, os contains "linux", XDM_CONST.OS_FAMILY_LINUX, os contains "android", XDM_CONST.OS_FAMILY_ANDROID, os contains "ios", XDM_CONST.OS_FAMILY_IOS, os contains "ubuntu", XDM_CONST.OS_FAMILY_UBUNTU, os contains "debian", XDM_CONST.OS_FAMILY_DEBIAN, os contains "fedora", XDM_CONST.OS_FAMILY_FEDORA, os contains "centos", XDM_CONST.OS_FAMILY_CENTOS, os contains "chrome", XDM_CONST.OS_FAMILY_CHROMEOS, os contains "solaris", XDM_CONST.OS_FAMILY_SOLARIS, os contains "scada", XDM_CONST.OS_FAMILY_SCADA, to_string(os)),
    xdm.source.location.country = x_cs_client_ip_country, 
    xdm.source.sent_bytes = to_number(cs_bytes), 
    xdm.source.user_agent = cs_user_agent_, 
    xdm.source.user.groups = if(cs_auth_groups != "-", split(cs_auth_groups, ";")),
    xdm.source.user.username = cs_userdn, 
    xdm.target.application.name = x_bluecoat_application_name, 
    xdm.target.file.extension = cs_uri_extension, 
    xdm.target.ipv4 = r_ip_ipv4,
    xdm.target.ipv6 = r_ip_ipv6,
    xdm.target.host.hostname = cs_host, 
    xdm.target.host.ipv4_addresses = arraydistinct(arraycreate(r_ip_ipv4, s_supplier_ip_ipv4)),
    xdm.target.host.ipv6_addresses = arraydistinct(arraycreate(r_ip_ipv6, s_supplier_ip_ipv6)),
    xdm.target.location.country = trim(r_supplier_country, "\""),
    xdm.target.port = to_integer(cs_uri_port),
    xdm.target.resource.value = concat(cs_uri_path, trim(cs_uri_query, "-")),
    xdm.target.sent_bytes = to_number(sc_bytes),
    xdm.target.url = url; 